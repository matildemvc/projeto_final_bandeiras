from tkinter import *
from tkinter import messagebox
from PIL import Image, ImageTk
import random
import os

# Cores
AZUL = "#4A90E2"
VERMELHO = "#E94B3C"
AMARELO = "#F9D342"
VERDE = "#50C878"
BRANCO = "#FFF7F0"
CINZENTO = "#D9D9D9"

# Pasta das imagens
DIRETORIO_IMAGENS = "bandeiras"

# Dados das bandeiras: c√≥digo ISO em min√∫sculo, nome e continente
bandeiras = {
    "br": ("Brasil", "Am√©rica do Sul"),
    "fr": ("Fran√ßa", "Europa"),
    "us": ("Estados Unidos", "Am√©rica do Norte"),
    "de": ("Alemanha", "Europa"),
    "jp": ("Jap√£o", "√Åsia"),
    "it": ("It√°lia", "Europa"),
    "cn": ("China", "√Åsia"),
    "ca": ("Canad√°", "Am√©rica do Norte"),
    "in": ("√çndia", "√Åsia"),
    "ru": ("R√∫ssia", "Europa/√Åsia"),
    "gb": ("Reino Unido", "Europa"),
    "mx": ("M√©xico", "Am√©rica do Norte"),
    "za": ("√Åfrica do Sul", "√Åfrica"),
    "au": ("Austr√°lia", "Oceania"),
    "es": ("Espanha", "Europa"),
    "kr": ("Coreia do Sul", "√Åsia"),
    "ar": ("Argentina", "Am√©rica do Sul"),
    "nl": ("Pa√≠ses Baixos", "Europa"),
    "se": ("Su√©cia", "Europa"),
    "no": ("Noruega", "Europa"),
    "ch": ("Su√≠√ßa", "Europa"),
    "eg": ("Egito", "√Åfrica"),
    "tr": ("Turquia", "Eur√°sia"),
    "sa": ("Ar√°bia Saudita", "√Åsia"),
    "th": ("Tail√¢ndia", "√Åsia"),
    "pk": ("Paquist√£o", "√Åsia"),
    "ng": ("Nig√©ria", "√Åfrica"),
    "pl": ("Pol√¥nia", "Europa"),
    "co": ("Col√¥mbia", "Am√©rica do Sul"),
    "cl": ("Chile", "Am√©rica do Sul")
}

# Janela principal
pagina = Tk()
pagina.title("üåç Quiz de Bandeiras")
pagina.geometry("360x520+500+150")
pagina.resizable(False, False)
pagina.configure(bg=BRANCO)

# Vari√°veis globais para o jogo
vidas = 5
pontuacao = 0

# Fun√ß√µes auxiliares
def limpar_pagina():
    for widget in pagina.winfo_children():
        widget.destroy()

def criar_cabecalho(texto):
    cabecalho = Frame(pagina, bg=AZUL)
    cabecalho.place(x=0, y=0, width=360, height=80)
    label = Label(cabecalho, text=texto, font="Arial 18 bold", fg=BRANCO, bg=AZUL)
    label.pack(pady=20)

def botao_voltar():
    return Button(pagina, text="üè† Menu", command=mostrar_menu_principal,
                  font="Arial 10 bold", bg=CINZENTO, fg="black", relief="flat")

def carregar_imagem(nome_arquivo):
    try:
        caminho = os.path.join(DIRETORIO_IMAGENS, nome_arquivo)
        imagem = Image.open(caminho)
        imagem = imagem.resize((140, 90))
        return ImageTk.PhotoImage(imagem)
    except Exception as e:
        print(f"Erro ao carregar imagem: {nome_arquivo} - {e}")
        return None

# --------- MENU PRINCIPAL ---------
def mostrar_menu_principal():
    global vidas, pontuacao
    vidas = 5
    pontuacao = 0
    limpar_pagina()
    criar_cabecalho("üåç Quiz de Bandeiras")

    btn_quiz = Button(pagina, text="üéÆ Come√ßar Quiz", command=mostrar_pagina_quiz,
                      font="Arial 14", bg=VERDE, fg="white", relief="flat")
    btn_quiz.place(width=200, height=50, x=80, y=150)

    btn_estudo = Button(pagina, text="üìò Estudar Bandeiras", command=mostrar_pagina_estudo,
                        font="Arial 14", bg=AMARELO, fg="black", relief="flat")
    btn_estudo.place(width=200, height=50, x=80, y=220)

# --------- QUIZ ---------
def mostrar_pagina_quiz():
    global vidas, pontuacao

    limpar_pagina()
    criar_cabecalho(f"‚ù§Ô∏è Vidas: {vidas}   Pontos: {pontuacao}")

    if vidas <= 0:
        messagebox.showinfo("Fim de Jogo!", f" As suas vidas acabaram!\nPontua√ß√£o final: {pontuacao}")
        mostrar_menu_principal()
        return

    pais_correto = random.choice(list(bandeiras.keys()))
    imagem = carregar_imagem(pais_correto + ".png")
    if imagem:
        img_label = Label(pagina, image=imagem, bg=BRANCO)
        img_label.image = imagem
        img_label.place(x=110, y=100)

    opcoes = list(bandeiras.keys())
    opcoes.remove(pais_correto)
    opcoes_erradas = random.sample(opcoes, 3)
    todas_opcoes = opcoes_erradas + [pais_correto]
    random.shuffle(todas_opcoes)

    def verificar_resposta(opcao_escolhida):
        global vidas, pontuacao
        if opcao_escolhida == pais_correto:
            pontuacao += 1
            messagebox.showinfo("‚úÖ Correto!", f"A bandeira √© do(a) {bandeiras[pais_correto][0]}!")
        else:
            vidas -= 1
            messagebox.showerror("‚ùå Errado", f"A resposta certa era: {bandeiras[pais_correto][0]}")

        mostrar_pagina_quiz()

    y = 220
    for opcao in todas_opcoes:
        nome_pais = bandeiras[opcao][0]
        botao = Button(pagina, text=nome_pais, command=lambda o=opcao: verificar_resposta(o),
                       font="Arial 12", bg=VERMELHO, fg="white", relief="flat")
        botao.place(width=200, height=40, x=80, y=y)
        y += 50

    voltar = botao_voltar()
    voltar.place(x=20, y=470)

# --------- ESTUDO DAS BANDEIRAS ---------
indice_estudo = 0

def mostrar_pagina_estudo():
    limpar_pagina()
    criar_cabecalho("üìñ Estuda as Bandeiras")

    global indice_estudo
    paises = list(bandeiras.keys())
    pais = paises[indice_estudo]
    dados = bandeiras[pais]
    imagem = carregar_imagem(pais + ".png")

    if imagem:
        img_label = Label(pagina, image=imagem, bg=BRANCO)
        img_label.image = imagem
        img_label.place(x=110, y=100)

    info = f"Pa√≠s: {dados[0]}\nContinente: {dados[1]}"
    label_info = Label(pagina, text=info, font="Arial 12", bg=BRANCO, fg="black", justify=LEFT)
    label_info.place(x=20, y=210)

    def proximo():
        global indice_estudo
        if indice_estudo < len(paises) - 1:
            indice_estudo += 1
        else:
            indice_estudo = 0
        mostrar_pagina_estudo()

    def anterior():
        global indice_estudo
        if indice_estudo > 0:
            indice_estudo -= 1
        else:
            indice_estudo = len(paises) - 1
        mostrar_pagina_estudo()

    btn_anterior = Button(pagina, text="‚¨Ö Anterior", command=anterior,
                         font="Arial 11", bg=AZUL, fg=BRANCO, relief="flat")
    btn_anterior.place(width=100, height=35, x=40, y=290)

    btn_proximo = Button(pagina, text="Pr√≥ximo ‚û°", command=proximo,
                        font="Arial 11", bg=AZUL, fg=BRANCO, relief="flat")
    btn_proximo.place(width=100, height=35, x=220, y=290)

    voltar = botao_voltar()
    voltar.place(x=20, y=470)

# Inicia o app
mostrar_menu_principal()
pagina.mainloop()
